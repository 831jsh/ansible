##
# BashRC RvE
##

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

#ansible setup
if [ -f ~/repo/ansible/hacking/env-setup ]; then source ~/repo/ansible/hacking/env-setup > /dev/null &2>1;export ANSIBLE_HOSTS=~/ansible_hosts; fi

export EDITOR=nano
EDITOR=nano

# Stop bash from overrriding my history
shopt -s cmdhist
shopt -s histappend histreedit histverify

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

## Prompt like:
## |---[remy][archlinux][~]
## |---->
PS1="\[\e[0;37m\]|---[\[\e[0;31m\]\u\[\e[0;37m\]][\[\e[0;96m\]\h\[\e[0;37m\]][\[\e[0;32m\]\w\[\e[0;37m\]]\n\[\e[0;37m\]|----> \[\e[0m\]"

## aliases
alias ls='ls -alh'
alias nano="nano -w"
alias gizzle="git add -A; git commit; git push origin $1"
alias pst="ps aux | column"
alias pgrep="ps aux | column | grep $1"
##EMC Mainframe legacy hard-coded in brain
alias zis=exit
## Bashrc editing and auto sourcing
alias bashrc="nano ~/.bashrc; source ~/.bashrc"

## SSH to VPSes"
alias sv1="ssh -t -t  remy@vps1.sparklingclouds.nl"
alias sv2="ssh -t -t  remy@vps2.sparklingclouds.nl"
alias sv3="ssh -t -t  remy@vps3.sparklingclouds.nl"
alias sv4="ssh -t -t  remy@vps4.sparklingclouds.nl"
alias sv5="ssh -t -t  remy@vps5.sparklingclouds.nl"
alias sv6="ssh -t -t  remy@vps6.sparklingclouds.nl"
alias sv7="ssh -t -t  remy@vps7.sparklingclouds.nl"
alias sv8="ssh -t -t  remy@vps8.sparklingclouds.nl"
alias sv9="ssh -t -t  remy@vps9.sparklingclouds.nl"
alias sv10="ssh -t -t  remy@vps10.sparklingclouds.nl"
alias sv11="ssh -t -t  remy@vps11.sparklingclouds.nl"
alias sv12="ssh -t -t  remy@vps12.sparklingclouds.nl"
alias sv13="ssh -t -t  remy@vps13.sparklingclouds.nl"
alias sv14="ssh -t -t  remy@vps14.sparklingclouds.nl"

alias checkcsr="openssl req -noout -text -in " 

# Functions

function extract()  
{
     if [ -f $1 ] ; then
         case $1 in
             *.tar.bz2)   tar xvjf $1     ;;
             *.tar.gz)    tar xvzf $1     ;;
             *.bz2)       bunzip2 $1      ;;
             *.rar)       unrar x $1      ;;
             *.gz)        gunzip $1       ;;
             *.tar)       tar xvf $1      ;;
             *.tbz2)      tar xvjf $1     ;;
             *.tgz)       tar xvzf $1     ;;
             *.zip)       unzip $1        ;;
             *.Z)         uncompress $1   ;;
             *.7z)        7z x $1         ;;
             *)           echo "'$1' cannot be extracted via extract<" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}


#directory tree please:
function lstree() {
echo
if [ "$1" != "" ]  #if parameter exists, use as base folder
   then cd "$1"
   fi
pwd
ls -R | grep ":$" |   \
   sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
# 1st sed: remove colons
# 2nd sed: replace higher level folder names with dashes
# 3rd sed: indent graph three spaces
# 4th sed: replace first dash with a vertical bar
if [ `ls -F -1 | grep "/" | wc -l` = 0 ]   # check if no folders
   then echo "   -> no sub-directories"
   fi
echo
}

# Show that nice info thing 
if [ -f /usr/bin/screenfetch ]; then screenfetch; fi

